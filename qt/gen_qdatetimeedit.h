#pragma once
#ifndef MIQT_QT_GEN_QDATETIMEEDIT_H
#define MIQT_QT_GEN_QDATETIMEEDIT_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../libmiqt/libmiqt.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
class QAbstractSpinBox;
class QCalendar;
class QCalendarWidget;
class QCloseEvent;
class QContextMenuEvent;
class QDate;
class QDateEdit;
class QDateTime;
class QDateTimeEdit;
class QEvent;
class QFocusEvent;
class QHideEvent;
class QKeyEvent;
class QMetaObject;
class QMouseEvent;
class QObject;
class QPaintDevice;
class QPaintEvent;
class QResizeEvent;
class QShowEvent;
class QSize;
class QTime;
class QTimeEdit;
class QTimerEvent;
class QVariant;
class QWheelEvent;
class QWidget;
#else
typedef struct QAbstractSpinBox QAbstractSpinBox;
typedef struct QCalendar QCalendar;
typedef struct QCalendarWidget QCalendarWidget;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDate QDate;
typedef struct QDateEdit QDateEdit;
typedef struct QDateTime QDateTime;
typedef struct QDateTimeEdit QDateTimeEdit;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEvent QPaintEvent;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTime QTime;
typedef struct QTimeEdit QTimeEdit;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

QDateTimeEdit* QDateTimeEdit_new(QWidget* parent);
QDateTimeEdit* QDateTimeEdit_new2();
QDateTimeEdit* QDateTimeEdit_new3(QDateTime* dt);
QDateTimeEdit* QDateTimeEdit_new4(QDate* d);
QDateTimeEdit* QDateTimeEdit_new5(QTime* t);
QDateTimeEdit* QDateTimeEdit_new6(QDateTime* dt, QWidget* parent);
QDateTimeEdit* QDateTimeEdit_new7(QDate* d, QWidget* parent);
QDateTimeEdit* QDateTimeEdit_new8(QTime* t, QWidget* parent);
void QDateTimeEdit_virtbase(QDateTimeEdit* src, QAbstractSpinBox** outptr_QAbstractSpinBox);
QMetaObject* QDateTimeEdit_MetaObject(const QDateTimeEdit* self);
void* QDateTimeEdit_Metacast(QDateTimeEdit* self, const char* param1);
struct miqt_string QDateTimeEdit_Tr(const char* s);
struct miqt_string QDateTimeEdit_TrUtf8(const char* s);
QDateTime* QDateTimeEdit_DateTime(const QDateTimeEdit* self);
QDate* QDateTimeEdit_Date(const QDateTimeEdit* self);
QTime* QDateTimeEdit_Time(const QDateTimeEdit* self);
QCalendar* QDateTimeEdit_Calendar(const QDateTimeEdit* self);
void QDateTimeEdit_SetCalendar(QDateTimeEdit* self, QCalendar* calendar);
QDateTime* QDateTimeEdit_MinimumDateTime(const QDateTimeEdit* self);
void QDateTimeEdit_ClearMinimumDateTime(QDateTimeEdit* self);
void QDateTimeEdit_SetMinimumDateTime(QDateTimeEdit* self, QDateTime* dt);
QDateTime* QDateTimeEdit_MaximumDateTime(const QDateTimeEdit* self);
void QDateTimeEdit_ClearMaximumDateTime(QDateTimeEdit* self);
void QDateTimeEdit_SetMaximumDateTime(QDateTimeEdit* self, QDateTime* dt);
void QDateTimeEdit_SetDateTimeRange(QDateTimeEdit* self, QDateTime* min, QDateTime* max);
QDate* QDateTimeEdit_MinimumDate(const QDateTimeEdit* self);
void QDateTimeEdit_SetMinimumDate(QDateTimeEdit* self, QDate* min);
void QDateTimeEdit_ClearMinimumDate(QDateTimeEdit* self);
QDate* QDateTimeEdit_MaximumDate(const QDateTimeEdit* self);
void QDateTimeEdit_SetMaximumDate(QDateTimeEdit* self, QDate* max);
void QDateTimeEdit_ClearMaximumDate(QDateTimeEdit* self);
void QDateTimeEdit_SetDateRange(QDateTimeEdit* self, QDate* min, QDate* max);
QTime* QDateTimeEdit_MinimumTime(const QDateTimeEdit* self);
void QDateTimeEdit_SetMinimumTime(QDateTimeEdit* self, QTime* min);
void QDateTimeEdit_ClearMinimumTime(QDateTimeEdit* self);
QTime* QDateTimeEdit_MaximumTime(const QDateTimeEdit* self);
void QDateTimeEdit_SetMaximumTime(QDateTimeEdit* self, QTime* max);
void QDateTimeEdit_ClearMaximumTime(QDateTimeEdit* self);
void QDateTimeEdit_SetTimeRange(QDateTimeEdit* self, QTime* min, QTime* max);
int QDateTimeEdit_DisplayedSections(const QDateTimeEdit* self);
int QDateTimeEdit_CurrentSection(const QDateTimeEdit* self);
int QDateTimeEdit_SectionAt(const QDateTimeEdit* self, int index);
void QDateTimeEdit_SetCurrentSection(QDateTimeEdit* self, int section);
int QDateTimeEdit_CurrentSectionIndex(const QDateTimeEdit* self);
void QDateTimeEdit_SetCurrentSectionIndex(QDateTimeEdit* self, int index);
QCalendarWidget* QDateTimeEdit_CalendarWidget(const QDateTimeEdit* self);
void QDateTimeEdit_SetCalendarWidget(QDateTimeEdit* self, QCalendarWidget* calendarWidget);
int QDateTimeEdit_SectionCount(const QDateTimeEdit* self);
void QDateTimeEdit_SetSelectedSection(QDateTimeEdit* self, int section);
struct miqt_string QDateTimeEdit_SectionText(const QDateTimeEdit* self, int section);
struct miqt_string QDateTimeEdit_DisplayFormat(const QDateTimeEdit* self);
void QDateTimeEdit_SetDisplayFormat(QDateTimeEdit* self, struct miqt_string format);
bool QDateTimeEdit_CalendarPopup(const QDateTimeEdit* self);
void QDateTimeEdit_SetCalendarPopup(QDateTimeEdit* self, bool enable);
int QDateTimeEdit_TimeSpec(const QDateTimeEdit* self);
void QDateTimeEdit_SetTimeSpec(QDateTimeEdit* self, int spec);
QSize* QDateTimeEdit_SizeHint(const QDateTimeEdit* self);
void QDateTimeEdit_Clear(QDateTimeEdit* self);
void QDateTimeEdit_StepBy(QDateTimeEdit* self, int steps);
bool QDateTimeEdit_Event(QDateTimeEdit* self, QEvent* event);
void QDateTimeEdit_DateTimeChanged(QDateTimeEdit* self, QDateTime* dateTime);
void QDateTimeEdit_connect_DateTimeChanged(QDateTimeEdit* self, intptr_t slot);
void QDateTimeEdit_TimeChanged(QDateTimeEdit* self, QTime* time);
void QDateTimeEdit_connect_TimeChanged(QDateTimeEdit* self, intptr_t slot);
void QDateTimeEdit_DateChanged(QDateTimeEdit* self, QDate* date);
void QDateTimeEdit_connect_DateChanged(QDateTimeEdit* self, intptr_t slot);
void QDateTimeEdit_SetDateTime(QDateTimeEdit* self, QDateTime* dateTime);
void QDateTimeEdit_SetDate(QDateTimeEdit* self, QDate* date);
void QDateTimeEdit_SetTime(QDateTimeEdit* self, QTime* time);
void QDateTimeEdit_KeyPressEvent(QDateTimeEdit* self, QKeyEvent* event);
void QDateTimeEdit_WheelEvent(QDateTimeEdit* self, QWheelEvent* event);
void QDateTimeEdit_FocusInEvent(QDateTimeEdit* self, QFocusEvent* event);
bool QDateTimeEdit_FocusNextPrevChild(QDateTimeEdit* self, bool next);
int QDateTimeEdit_Validate(const QDateTimeEdit* self, struct miqt_string input, int* pos);
void QDateTimeEdit_Fixup(const QDateTimeEdit* self, struct miqt_string input);
QDateTime* QDateTimeEdit_DateTimeFromText(const QDateTimeEdit* self, struct miqt_string text);
struct miqt_string QDateTimeEdit_TextFromDateTime(const QDateTimeEdit* self, QDateTime* dt);
int QDateTimeEdit_StepEnabled(const QDateTimeEdit* self);
void QDateTimeEdit_MousePressEvent(QDateTimeEdit* self, QMouseEvent* event);
void QDateTimeEdit_PaintEvent(QDateTimeEdit* self, QPaintEvent* event);
struct miqt_string QDateTimeEdit_Tr2(const char* s, const char* c);
struct miqt_string QDateTimeEdit_Tr3(const char* s, const char* c, int n);
struct miqt_string QDateTimeEdit_TrUtf82(const char* s, const char* c);
struct miqt_string QDateTimeEdit_TrUtf83(const char* s, const char* c, int n);
bool QDateTimeEdit_override_virtual_SizeHint(void* self, intptr_t slot);
QSize* QDateTimeEdit_virtualbase_SizeHint(const void* self);
bool QDateTimeEdit_override_virtual_Clear(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_Clear(void* self);
bool QDateTimeEdit_override_virtual_StepBy(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_StepBy(void* self, int steps);
bool QDateTimeEdit_override_virtual_Event(void* self, intptr_t slot);
bool QDateTimeEdit_virtualbase_Event(void* self, QEvent* event);
bool QDateTimeEdit_override_virtual_KeyPressEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_KeyPressEvent(void* self, QKeyEvent* event);
bool QDateTimeEdit_override_virtual_WheelEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_WheelEvent(void* self, QWheelEvent* event);
bool QDateTimeEdit_override_virtual_FocusInEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_FocusInEvent(void* self, QFocusEvent* event);
bool QDateTimeEdit_override_virtual_FocusNextPrevChild(void* self, intptr_t slot);
bool QDateTimeEdit_virtualbase_FocusNextPrevChild(void* self, bool next);
bool QDateTimeEdit_override_virtual_Validate(void* self, intptr_t slot);
int QDateTimeEdit_virtualbase_Validate(const void* self, struct miqt_string input, int* pos);
bool QDateTimeEdit_override_virtual_Fixup(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_Fixup(const void* self, struct miqt_string input);
bool QDateTimeEdit_override_virtual_DateTimeFromText(void* self, intptr_t slot);
QDateTime* QDateTimeEdit_virtualbase_DateTimeFromText(const void* self, struct miqt_string text);
bool QDateTimeEdit_override_virtual_TextFromDateTime(void* self, intptr_t slot);
struct miqt_string QDateTimeEdit_virtualbase_TextFromDateTime(const void* self, QDateTime* dt);
bool QDateTimeEdit_override_virtual_StepEnabled(void* self, intptr_t slot);
int QDateTimeEdit_virtualbase_StepEnabled(const void* self);
bool QDateTimeEdit_override_virtual_MousePressEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_MousePressEvent(void* self, QMouseEvent* event);
bool QDateTimeEdit_override_virtual_PaintEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_PaintEvent(void* self, QPaintEvent* event);
bool QDateTimeEdit_override_virtual_MinimumSizeHint(void* self, intptr_t slot);
QSize* QDateTimeEdit_virtualbase_MinimumSizeHint(const void* self);
bool QDateTimeEdit_override_virtual_InputMethodQuery(void* self, intptr_t slot);
QVariant* QDateTimeEdit_virtualbase_InputMethodQuery(const void* self, int param1);
bool QDateTimeEdit_override_virtual_ResizeEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_ResizeEvent(void* self, QResizeEvent* event);
bool QDateTimeEdit_override_virtual_KeyReleaseEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_KeyReleaseEvent(void* self, QKeyEvent* event);
bool QDateTimeEdit_override_virtual_FocusOutEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_FocusOutEvent(void* self, QFocusEvent* event);
bool QDateTimeEdit_override_virtual_ContextMenuEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_ContextMenuEvent(void* self, QContextMenuEvent* event);
bool QDateTimeEdit_override_virtual_ChangeEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_ChangeEvent(void* self, QEvent* event);
bool QDateTimeEdit_override_virtual_CloseEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_CloseEvent(void* self, QCloseEvent* event);
bool QDateTimeEdit_override_virtual_HideEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_HideEvent(void* self, QHideEvent* event);
bool QDateTimeEdit_override_virtual_MouseReleaseEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_MouseReleaseEvent(void* self, QMouseEvent* event);
bool QDateTimeEdit_override_virtual_MouseMoveEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_MouseMoveEvent(void* self, QMouseEvent* event);
bool QDateTimeEdit_override_virtual_TimerEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_TimerEvent(void* self, QTimerEvent* event);
bool QDateTimeEdit_override_virtual_ShowEvent(void* self, intptr_t slot);
void QDateTimeEdit_virtualbase_ShowEvent(void* self, QShowEvent* event);
void QDateTimeEdit_Delete(QDateTimeEdit* self);

QTimeEdit* QTimeEdit_new(QWidget* parent);
QTimeEdit* QTimeEdit_new2();
QTimeEdit* QTimeEdit_new3(QTime* time);
QTimeEdit* QTimeEdit_new4(QTime* time, QWidget* parent);
void QTimeEdit_virtbase(QTimeEdit* src, QDateTimeEdit** outptr_QDateTimeEdit);
QMetaObject* QTimeEdit_MetaObject(const QTimeEdit* self);
void* QTimeEdit_Metacast(QTimeEdit* self, const char* param1);
struct miqt_string QTimeEdit_Tr(const char* s);
struct miqt_string QTimeEdit_TrUtf8(const char* s);
void QTimeEdit_UserTimeChanged(QTimeEdit* self, QTime* time);
void QTimeEdit_connect_UserTimeChanged(QTimeEdit* self, intptr_t slot);
struct miqt_string QTimeEdit_Tr2(const char* s, const char* c);
struct miqt_string QTimeEdit_Tr3(const char* s, const char* c, int n);
struct miqt_string QTimeEdit_TrUtf82(const char* s, const char* c);
struct miqt_string QTimeEdit_TrUtf83(const char* s, const char* c, int n);
bool QTimeEdit_override_virtual_SizeHint(void* self, intptr_t slot);
QSize* QTimeEdit_virtualbase_SizeHint(const void* self);
bool QTimeEdit_override_virtual_Clear(void* self, intptr_t slot);
void QTimeEdit_virtualbase_Clear(void* self);
bool QTimeEdit_override_virtual_StepBy(void* self, intptr_t slot);
void QTimeEdit_virtualbase_StepBy(void* self, int steps);
bool QTimeEdit_override_virtual_Event(void* self, intptr_t slot);
bool QTimeEdit_virtualbase_Event(void* self, QEvent* event);
bool QTimeEdit_override_virtual_KeyPressEvent(void* self, intptr_t slot);
void QTimeEdit_virtualbase_KeyPressEvent(void* self, QKeyEvent* event);
bool QTimeEdit_override_virtual_WheelEvent(void* self, intptr_t slot);
void QTimeEdit_virtualbase_WheelEvent(void* self, QWheelEvent* event);
bool QTimeEdit_override_virtual_FocusInEvent(void* self, intptr_t slot);
void QTimeEdit_virtualbase_FocusInEvent(void* self, QFocusEvent* event);
bool QTimeEdit_override_virtual_FocusNextPrevChild(void* self, intptr_t slot);
bool QTimeEdit_virtualbase_FocusNextPrevChild(void* self, bool next);
bool QTimeEdit_override_virtual_Validate(void* self, intptr_t slot);
int QTimeEdit_virtualbase_Validate(const void* self, struct miqt_string input, int* pos);
bool QTimeEdit_override_virtual_Fixup(void* self, intptr_t slot);
void QTimeEdit_virtualbase_Fixup(const void* self, struct miqt_string input);
bool QTimeEdit_override_virtual_DateTimeFromText(void* self, intptr_t slot);
QDateTime* QTimeEdit_virtualbase_DateTimeFromText(const void* self, struct miqt_string text);
bool QTimeEdit_override_virtual_TextFromDateTime(void* self, intptr_t slot);
struct miqt_string QTimeEdit_virtualbase_TextFromDateTime(const void* self, QDateTime* dt);
bool QTimeEdit_override_virtual_StepEnabled(void* self, intptr_t slot);
int QTimeEdit_virtualbase_StepEnabled(const void* self);
bool QTimeEdit_override_virtual_MousePressEvent(void* self, intptr_t slot);
void QTimeEdit_virtualbase_MousePressEvent(void* self, QMouseEvent* event);
bool QTimeEdit_override_virtual_PaintEvent(void* self, intptr_t slot);
void QTimeEdit_virtualbase_PaintEvent(void* self, QPaintEvent* event);
void QTimeEdit_Delete(QTimeEdit* self);

QDateEdit* QDateEdit_new(QWidget* parent);
QDateEdit* QDateEdit_new2();
QDateEdit* QDateEdit_new3(QDate* date);
QDateEdit* QDateEdit_new4(QDate* date, QWidget* parent);
void QDateEdit_virtbase(QDateEdit* src, QDateTimeEdit** outptr_QDateTimeEdit);
QMetaObject* QDateEdit_MetaObject(const QDateEdit* self);
void* QDateEdit_Metacast(QDateEdit* self, const char* param1);
struct miqt_string QDateEdit_Tr(const char* s);
struct miqt_string QDateEdit_TrUtf8(const char* s);
void QDateEdit_UserDateChanged(QDateEdit* self, QDate* date);
void QDateEdit_connect_UserDateChanged(QDateEdit* self, intptr_t slot);
struct miqt_string QDateEdit_Tr2(const char* s, const char* c);
struct miqt_string QDateEdit_Tr3(const char* s, const char* c, int n);
struct miqt_string QDateEdit_TrUtf82(const char* s, const char* c);
struct miqt_string QDateEdit_TrUtf83(const char* s, const char* c, int n);
bool QDateEdit_override_virtual_SizeHint(void* self, intptr_t slot);
QSize* QDateEdit_virtualbase_SizeHint(const void* self);
bool QDateEdit_override_virtual_Clear(void* self, intptr_t slot);
void QDateEdit_virtualbase_Clear(void* self);
bool QDateEdit_override_virtual_StepBy(void* self, intptr_t slot);
void QDateEdit_virtualbase_StepBy(void* self, int steps);
bool QDateEdit_override_virtual_Event(void* self, intptr_t slot);
bool QDateEdit_virtualbase_Event(void* self, QEvent* event);
bool QDateEdit_override_virtual_KeyPressEvent(void* self, intptr_t slot);
void QDateEdit_virtualbase_KeyPressEvent(void* self, QKeyEvent* event);
bool QDateEdit_override_virtual_WheelEvent(void* self, intptr_t slot);
void QDateEdit_virtualbase_WheelEvent(void* self, QWheelEvent* event);
bool QDateEdit_override_virtual_FocusInEvent(void* self, intptr_t slot);
void QDateEdit_virtualbase_FocusInEvent(void* self, QFocusEvent* event);
bool QDateEdit_override_virtual_FocusNextPrevChild(void* self, intptr_t slot);
bool QDateEdit_virtualbase_FocusNextPrevChild(void* self, bool next);
bool QDateEdit_override_virtual_Validate(void* self, intptr_t slot);
int QDateEdit_virtualbase_Validate(const void* self, struct miqt_string input, int* pos);
bool QDateEdit_override_virtual_Fixup(void* self, intptr_t slot);
void QDateEdit_virtualbase_Fixup(const void* self, struct miqt_string input);
bool QDateEdit_override_virtual_DateTimeFromText(void* self, intptr_t slot);
QDateTime* QDateEdit_virtualbase_DateTimeFromText(const void* self, struct miqt_string text);
bool QDateEdit_override_virtual_TextFromDateTime(void* self, intptr_t slot);
struct miqt_string QDateEdit_virtualbase_TextFromDateTime(const void* self, QDateTime* dt);
bool QDateEdit_override_virtual_StepEnabled(void* self, intptr_t slot);
int QDateEdit_virtualbase_StepEnabled(const void* self);
bool QDateEdit_override_virtual_MousePressEvent(void* self, intptr_t slot);
void QDateEdit_virtualbase_MousePressEvent(void* self, QMouseEvent* event);
bool QDateEdit_override_virtual_PaintEvent(void* self, intptr_t slot);
void QDateEdit_virtualbase_PaintEvent(void* self, QPaintEvent* event);
void QDateEdit_Delete(QDateEdit* self);

#ifdef __cplusplus
} /* extern C */
#endif 

#endif
